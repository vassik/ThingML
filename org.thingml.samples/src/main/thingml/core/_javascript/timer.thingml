import "../timer.thingml"

protocol kevoree;

// Manage a set of software timers.
thing TimerJS includes Timer
@pim "Timer"
@platform "javascript"
@javascript "node browser"
@debug "true"
{
    property i : Integer = 0 @kevoree "instance"

    function cancel() @debug "false"
    do
        'clearTimeout(this.timer);'
    end

    function _start(delay : Integer)
    do
        'this.timer = setTimeout(()=>this.onTimeout(),' & delay & ');'
        i = i + 1
    end

    function onTimeout()
    do
        timer!timer_timeout()
    end

    statechart SoftTimer init default {
        state default {

          internal _start
            event m : timer?timer_start
            guard m.delay > 0
            action do
                 i = i + 1
                _start(m.delay)
            end

          internal cancel
            event m : timer?timer_cancel
            action cancel()
        }
    }
}

/**
* @debug "true" on configuration indicates we should traces all instances.
* To debug a given instance, put the annotation on the instance, and not on the configuration.
* Alternatively, keep the annotation on the configuration and put @debug "false" on the instances you do not want to debug
*/
configuration TimerJS
@SuppressWarnings "Function Usage"
{
    instance timer : TimerJS
    instance client : SimpleTimerClient
    connector client.timer => timer.timer
}
