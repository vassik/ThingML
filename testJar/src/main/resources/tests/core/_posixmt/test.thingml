import "../test.thingml"
datatype double<8>
@c_type "double";

thing TestDumpPosixmt includes TestDump
@c_header "#include <stdio.h>
#include <sys/time.h>"
@c_global "FILE* testFile = NULL;
FILE* cpuFile = NULL;"
{
	function write(c : Char) do
        'if (testFile == NULL) {
            testFile = fopen("dump", "w");
        }
        if (testFile != NULL) {
            fprintf(testFile,"%c",c);
        }
	    printf("%c",c);'
	end

	statechart PosixHarness init Testing {
		property transitionsCount : Long = 0
 	    property stateNumber: String = ""
        property time : LongLong = 0

		state Testing {

            internal event m : dump?testOut
            action do
                write(m.c)
            	transitionsCount=transitionsCount+1
            end

            transition -> Failed
            event dump?testFailure

            transition -> End
            event dumpEnd?testEnd
		}

		final state Failed {
            on entry do
                print("*FAILURE*\n")
                'if (testFile != NULL) {
                    fclose(testFile);
                }
                if (cpuFile != NULL) {
                    fclose(cpuFile);
                }
                exit(-1);'
            end
		}

		final state End {
			on entry do

print " [Done]\n End of thingml processus\n"
'exit(0);'
			end
		}
	}
}
