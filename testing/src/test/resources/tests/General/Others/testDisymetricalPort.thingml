import "../../thingml.thingml"

thing TestDisymetricalPort includes Test
@test "12 # I1"
{
	message m1();
	message m2();
	message m3();

	provided port pin {
		receives m1, m3
	}
	required port pout {
		sends m1, m2
	}
	statechart Chart init Init {
		internal event Test?Done
		action TestDone()
		
		state Init {
			on entry do
				TestOut('\'I\'')
			end

			internal event e : Test?In
			guard e.c == '\'1\''	
			action pout!m1()	

			internal event e : Test?In
			guard e.c == '\'2\''		
			action pout!m2()	

			internal event pin?m1
			action TestOut('\'1\'')

			internal event pin?m3
			action TestOut('\'3\'')
		}
	}
}

configuration conf {
	instance test : TestDisymetricalPort
	
	connector test.pout => test.pin
}