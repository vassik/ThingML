import "../../thingml.thingml"

// Three servers on the same port and one client.

thing PingMsg {
    message ping();
    message pong();        
}

thing PingServer includes PingMsg {
        
    provided port pp {
         receives ping
         sends pong
    }
    
    statechart PingServer init Idle {
        state Idle {
            internal event p : pp?ping
            action do
                pp!pong()
            end
        }    
    } 
}

thing TestMultiServerPing includes Test, PingMsg
@test "0 # P111"
{
    required port ppclient {
        sends ping
        receives pong    
    }
    
    property doneCount : Integer = 0
    
	statechart TestMultiServerPing init Ping {
		state Ping {
            transition -> Pong
			event m : Test?In
			guard m.c == '\'0\''
			action do
                TestOut('\'P\'')
                ppclient!ping(0)
            end
		}

		state Pong {
			internal event ppclient?pong
			action do
				TestOut('\'1\'')
				doneCount = doneCount + 1
    			if (doneCount == 3) Test!Done()
			end
		}
	}
}

configuration conf {
	instance test : TestMultiServerPing

	instance pingServ1 : PingServer
	instance pingServ2 : PingServer
	instance pingServ3 : PingServer
	
	connector test.ppclient => pingServ1.pp
	connector test.ppclient => pingServ2.pp
	connector test.ppclient => pingServ3.pp
}